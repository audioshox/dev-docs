openapi: 3.0.1
x-stoplight:
  id: 6b3011ce6d312
info:
  title: Promotions API - Beta
  description: |-
    ## This API is currently in BETA.

    * To learn more about promotions, consult the [Promotions Overview](/docs/api-beta-promotions/ZG9jOjE5Nzk3Mjg1-promotions-api-beta).
  version: ''
  contact:
    name: Bigcommerce.com
    url: 'https://www.bigcommerce.com'
    email: support@bigcommerce.com
servers:
  - url: 'https://api.bigcommerce.com'
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
tags:
  - name: Promotions
paths:
  '/stores/{store_hash}/v3/promotions':
    get:
      tags:
        - Promotions
      summary: Get All Promotions
      description: |-
        Returns a list of *promotions*.

        The response includes the display name and other details about each promotion, and lists the promotions ordered by *id* by default.
      operationId: getPromotions
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: query
          description: Filter items by `id`.
          schema:
            type: integer
        - name: name
          in: query
          description: Filter items by `name`.
          schema:
            type: string
        - name: code
          in: query
          description: Filter items by `code`.
          schema:
            type: string
        - name: currency_code
          in: query
          description: Filter items by `currency_code`.
          schema:
            type: string
        - name: redemption_type
          in: query
          description: Filter items by `redemption type`
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - automatic
              - coupon
        - name: status
          in: query
          description: Filter items by `status`.
          schema:
            type: string
        - name: page
          in: query
          description: Specifies the page number in a limited (paginated) list of resources.
          schema:
            minimum: 1
            type: integer
        - name: limit
          in: query
          description: Controls the number of items per page in a limited (paginated) list of resources.
          schema:
            maximum: 250
            minimum: 1
            type: integer
        - name: sort
          in: query
          description: Field name to sort by. Default value is *id*
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - id
              - name
              - priority
              - start_date
        - name: direction
          in: query
          description: Sorting direction. Default value is *asc*
          allowEmptyValue: true
          schema:
            type: string
            enum:
              - asc
              - desc
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/PromotionsCollectionResponse'
        '422':
          description: Failure due to an invalid query parameter.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      tags:
        - Promotions
      summary: Create Promotion
      description: |-
        Creates a *promotion*.
        To learn more about how to create a *promotion*, consult the [Promotions Overview](/docs/api-beta-promotions/ZG9jOjE5Nzk3Mjg1-promotions-api-beta).
        For a list of code samples, see [Code Samples](/docs/api-beta-promotions/ZG9jOjE5Nzk3Mjg3-code-samples-brand-promotions-api-beta).
      operationId: createPromotion
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PromotionCoupon'
                - $ref: '#/components/schemas/PromotionAutomatic'
            examples:
              Shipping:
                value:
                  name: Buy two of X and Buy two of Y get free shipping to all zones
                  redemption_type: AUTOMATIC
                  customer:
                    group_ids:
                      - 1
                      - 2
                    minimum_order_count: 0
                    excluded_group_ids: []
                    segments:
                      id:
                        - '1'
                  rules:
                    - action:
                        shipping:
                          free_shipping: true
                          zone_ids: '*'
                      apply_once: true
                      stop: false
                      condition:
                        and:
                          - cart:
                              items:
                                products:
                                  - 97
                              minimum_quantity: 2
                          - cart:
                              items:
                                variants:
                                  - 12
                              minimum_quantity: 2
                  notifications: []
                  priority: 20
                  stop: false
                  status: ENABLED
                  shipping_address: null
                  schedule: null
              Product:
                value:
                  name: Buy One Get One Free
                  redemption_type: AUTOMATIC
                  customer:
                    group_ids:
                      - 1
                      - 2
                  rules:
                    - action:
                        gift_item:
                          product_id: 81
                          quantity: 1
                      apply_once: false
                      stop: false
                      currency_code: AUD
                      condition:
                        cart:
                          items:
                            products:
                              - 81
                          minimum_quantity: 1
                  notifications:
                    - type: UPSELL
                      content: ''
                      locations:
                        - CART_PAGE
                    - type: ELIGIBLE
                      content: ''
                      locations:
                        - CART_PAGE
                    - type: APPLIED
                      content: ''
                      locations:
                        - CART_PAGE
                  priority: 1
                  stop: false
                  status: ENABLED
                  shipping_address:
                    not:
                      countries:
                        - iso2_country_code: US
                        - iso2_country_code: AU
                  schedule:
                    week_frequency: 2
                    week_days:
                      - Tuesday
                      - Thursday
                    daily_start_time: '10:00:00'
                    daily_end_time: '22:00:00'
              Order:
                value:
                  name: Tiered $ off Order Based on Order Value
                  redemption_type: AUTOMATIC
                  customer:
                    minimum_order_count: 1
                    excluded_group_ids:
                      - 1
                      - 2
                  rules:
                    - action:
                        cart_value:
                          discount:
                            fixed_amount: '45'
                      apply_once: true
                      stop: true
                      condition:
                        cart:
                          minimum_spend: '175'
                    - action:
                        cart_value:
                          discount:
                            fixed_amount: '30'
                      apply_once: true
                      stop: true
                      condition:
                        cart:
                          minimum_spend: '150'
                    - action:
                        cart_value:
                          discount:
                            fixed_amount: '15'
                      apply_once: true
                      stop: true
                      condition:
                        cart:
                          minimum_spend: '100'
                  notifications:
                    - type: UPSELL
                      content: <div>&nbsp;</div>
                      locations:
                        - CART_PAGE
                    - type: ELIGIBLE
                      content: <div>&nbsp;</div>
                      locations:
                        - CART_PAGE
                    - type: APPLIED
                      content: <div>&nbsp;</div>
                      locations:
                        - CART_PAGE
                  priority: 13
                  stop: false
                  start_date: '2019-02-01T05:00:00+00:00'
                  status: ENABLED
                  shipping_address:
                    countries:
                      - iso2_country_code: US
                  schedule: null
        required: true
      responses:
        '201':
          $ref: '#/components/responses/PromotionsResponse'
        '422':
          description: The request payload was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Promotions
      summary: Delete Multiple Promotions
      description: "Deletes multiple promotions. At the time of writing, batches are limited to 50 promotions.\n\n**Required Query Param**\n\nid:in – ID of the promotions to be deleted\n\ne.g.: id:in=11,12,13,14\n\n**Notes**\n\n- \"id:in\" query param is required to delete promotions. If not provided, or provided with wrong data format, a 422 is returned.\n\n- Deleting promotions that still have coupon codes attached is not allowed.\_"
      operationId: deletePromotions
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: 'id:in'
          in: query
          description: |-
            id of promotions

            Example: **?id:in=11,12,13,14**
          required: true
          style: form
          explode: false
          schema:
            minItems: 1
            type: array
            items:
              type: integer
      responses:
        '204':
          description: The 204 response
          content: {}
        '422':
          $ref: '#/components/responses/BulkDeleteResponse'
  '/stores/{store_hash}/v3/promotions/{id}':
    get:
      tags:
        - Promotions
      summary: Get Promotion
      description: Returns a single *promotion*.
      operationId: getPromotion
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          description: A unique identifier for the promotion.
          required: true
          schema:
            type: integer
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '200':
          $ref: '#/components/responses/PromotionsResponse'
        '404':
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Promotions
      summary: Update Promotion
      description: Updates a *promotion*.
      operationId: updatePromotion
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          description: The `id` of the promotion to be updated.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PromotionCoupon'
                - $ref: '#/components/schemas/PromotionAutomatic'
            examples:
              example-1:
                value:
                  name: Buy One Get One Free
                  customer:
                    group_ids: []
                    minimum_order_count: 0
                    excluded_group_ids:
                      - 1
                      - 2
                    segments: null
                  rules:
                    - action:
                        gift_item:
                          product_id: 174
                          quantity: 1
                      apply_once: false
                      stop: false
                      condition:
                        cart:
                          items:
                            products:
                              - 174
                          minimum_quantity: 1
                  notifications:
                    - type: UPSELL
                      content: ''
                      locations:
                        - CART_PAGE
                    - type: ELIGIBLE
                      content: ''
                      locations:
                        - CART_PAGE
                    - type: APPLIED
                      content: ''
                      locations:
                        - CART_PAGE
                  priority: 2
                  stop: false
                  currency_code: USD
                  max_uses: null
                  start_date: '2019-01-28T00:00:00+00:00'
                  end_date: null
                  status: ENABLED
                  shipping_addresses:
                    not:
                      countries:
                        - iso2_country_code: USA
                        - iso2_country_code: AU
        required: true
      responses:
        '200':
          $ref: '#/components/responses/PromotionsResponse'
        '404':
          description: The requested resource could not be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Promotions
      summary: Delete Promotion
      description: Deletes a *Promotion*.
      operationId: deletePromotion
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: id
          in: path
          description: The ID of the promotion to be deleted.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: The deletion was successful or the resource does not exist.
          content: {}
  '/stores/{store_hash}/v3/promotions/{promotion_id}/codes':
    get:
      tags:
        - Promotions
      summary: Get Coupon Codes
      description: Get codes for a particular promotion
      operationId: getPromotionCodes
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: promotion_id
          in: path
          description: The `id` of the promotion to be updated.
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/PromotionCodesCollectionResponse'
    post:
      tags:
        - Promotions
      summary: Create A Coupon Code
      description: Create a new code for the promotion
      operationId: createPromotionCode
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: promotion_id
          in: path
          description: The `id` of the promotion to be updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
                - code
              type: object
              properties:
                code:
                  pattern: '[a-zA-Z0-9_\ -]'
                  type: string
                  description: 'A unique code that can be used to manually apply a discount. Only letters, numbers, white spaces, underscores, and hypens are allowed.'
                max_uses:
                  type: integer
                  description: The maximum number of times this coupon code can be used.
                  example: 10
                max_uses_per_customer:
                  type: integer
                  description: The maximum number of times this coupon code can be used by a specific customer.
                  example: 5
        required: true
      responses:
        '200':
          $ref: '#/components/responses/PromotionCodeResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Promotions
      summary: Delete Multiple Coupon Codes
      description: |-
        Deletes multiple coupon codes relating to the given promotion. At the time of writing, batches are limited to 50 coupon codes.

        **Required Query Param**

        id:in – ID of the coupon codes to be deleted

        e.g.: id:in=11,12,13,14

        **Notes**

        - "id:in" query param is required to delete coupon codes. If not provided, or provided with wrong data format, then a 422 is returned.
      operationId: deleteCouponCodes
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: 'id:in'
          in: query
          description: |-
            id of coupon codes

            Example: **?id:in=11,12,13,14**
          required: true
          style: form
          explode: false
          schema:
            minItems: 1
            type: array
            items:
              type: integer
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
        - name: promotion_id
          in: path
          description: The `id` of the promotion to be updated.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The 204 response
          content: {}
        '422':
          $ref: '#/components/responses/BulkDeleteResponse'
  '/stores/{store_hash}/v3/promotions/{promotion_id}/codes/{code_id}':
    delete:
      tags:
        - Promotions
      summary: Delete A Coupon Code
      description: Deletes a *Coupon code*.
      operationId: deleteCouponCode
      parameters:
        - name: store_hash
          in: path
          schema:
            type: string
          required: true
        - name: promotion_id
          in: path
          description: The ID of the promotion code belongs to.
          required: true
          schema:
            type: string
        - name: code_id
          in: path
          description: The ID of the coupon code to delete.
          required: true
          schema:
            type: string
        - name: Accept
          in: header
          schema:
            type: string
            default: application/json
        - name: Content-Type
          in: header
          schema:
            type: string
            default: application/json
      responses:
        '204':
          description: The deletion was successful or the resource does not exist.
          content: {}
components:
  schemas:
    PromotionBase:
      title: ''
      type: object
      description: |-
        **Promotion**
        A *promotion* is composed of a condition that a customer can satisfy (such as increasing their cart value above a certain amount or adding an item to their cart) and an action will take place (such as a discount on the customer's order total, or a free item being added to their cart).
      properties:
        id:
          type: integer
          description: An auto generated unique identifier for the discount rule.
          example: 1
        redemption_type:
          type: string
          description: The type of the promotion. Promotions applied automatically have a value of `AUTOMATIC` whereas promotions requiring a coupon have a value of `COUPON`.
          enum:
            - AUTOMATIC
            - COUPON
        name:
          type: string
          description: An internal name for this rule for the merchant to refer to.
          example: Buy Product X Get Free Shipping
        customer:
          $ref: '#/components/schemas/Customer'
        rules:
          type: array
          description: An ordered list of rules to be executed until the first applicable one applies a discount successfully and the rest will be skipped.
          items:
            $ref: '#/components/schemas/Rule'
        current_uses:
          type: integer
          description: A read-only count of the times this rule has been used by customers. A rule is considered to be used when a customer successfully checks out with a rule that has applied a discount to their cart.
          example: 2
        max_uses:
          type: integer
          description: The maximum number of times this discount can be used by customers.
          example: 10
        status:
          type: string
          description: Controls whether or not a discount rule can be used by customers. `INVALID` is a read-only status into which enabled discount rules may transition when they become invalid.
          enum:
            - ENABLED
            - DISABLED
            - INVALID
        start_date:
          type: string
          description: The date & time this rule will become active.
          format: date-time
          example: '2019-01-20T22:00:00.000Z'
        end_date:
          type: string
          description: 'The date & time that this rule will expire. If left null, then the promotion never expires.'
          format: date-time
          example: '2019-01-20T22:00:00.000Z'
        stop:
          type: boolean
          description: 'When the promotion is applied successfully, whether to stop evaluating promotions down the priority list'
          example: false
        can_be_used_with_other_promotions:
          type: boolean
          description: 'Determine whether this promotion can be used with other promotions. When set to false, only apply this promotion if there is no discounts applied already, and stop executing other promotions if this promotion applies successfully'
          example: false
          default: true
        currency_code:
          type: string
          description: The ISO-4217 transactional currency code to which the promotion applies OR * for all currencies
          example: USD
          default: 'false'
        notifications:
          type: array
          description: Notifications to display on the storefront based on promotion evaluation result.
          items:
            $ref: '#/components/schemas/Notification'
        shipping_address:
          description: Shipping address targeting rules that the promotion supports.
          oneOf:
            - $ref: '#/components/schemas/AddressMatcher'
        schedule:
          description: 'Schedule details. Example of business use case: Available on Tuesday and Thursday from 10am to 10pm every 2 weeks'
          oneOf:
            - $ref: '#/components/schemas/AvailabilityByWeekDay'
      required:
        - redemption_type
        - name
        - rules
    PromotionCoupon:
      title: ''
      description: '**Coupon Promotion**'
      allOf:
        - $ref: '#/components/schemas/PromotionBase'
        - type: object
          properties:
            coupon_overrides_automatic_when_offering_higher_discounts:
              type: boolean
              example: false
              default: false
              description: |-
                This field only has effect when the `redemption_type` is `COUPON` and `can_be_used_with_other_promotions` is `false`:
                - When the field value is "true", the coupon will override the applied automatic promotions if it gives greater discount.
                - When the field value is "false", the coupon will not be applied if there's already applied automatic promotions.

                Trying to set the value of this field to "true" when the `redemption_type` is not `COUPON`, or when `can_be_used_with_other_promotions` is `true` will yield the 422 error response.
      x-examples:
        example-1:
          id: 1
          redemption_type: COUPON
          name: Buy Product X Get Free Shipping
          customer:
            group_ids:
              - 1
              - 2
              - 3
            minimum_order_count: 0
            excluded_group_ids:
              - 1
              - 2
              - 3
            segments:
              id:
                - ccec121a-f9bc-4a04-809e-1fe0d8ae7fdd
          rules:
            - condition:
                cart:
                  items:
                    brands:
                      - 1
                      - 2
                      - 3
                  minimum_quantity: 1
                  minimum_spend: '12.95'
              action:
                cart_value:
                  discount:
                    fixed_amount: '12.95'
              apply_once: true
              stop: true
          current_uses: 2
          max_uses: 10
          status: ENABLED
          start_date: '2019-01-20T22:00:00.000Z'
          end_date: '2019-01-20T22:00:00.000Z'
          stop: false
          can_be_used_with_other_promotions: false
          coupon_overrides_automatic_when_offering_higher_discounts: true
          currency_code: USD
          notifications:
            - content: Congratulations! You've received a free %ACTION.FREE_PRODUCT%!
              type: UPSELL
              locations:
                - HOME_PAGE
          shipping_address:
            countries:
              - iso2_country_code: US
          schedule:
            week_frequency: 2
            week_days:
              - Monday
            daily_start_time: '01:20:00'
            daily_end_time: '23:59:00'
    PromotionAutomatic:
      title: ''
      description: '**Automatic Promotion**'
      allOf:
        - $ref: '#/components/schemas/PromotionBase'
      x-examples:
        example-1:
          id: 1
          redemption_type: AUTOMATIC
          name: Buy Product X Get Free Shipping
          customer:
            group_ids:
              - 1
              - 2
              - 3
            minimum_order_count: 0
            excluded_group_ids:
              - 1
              - 2
              - 3
            segments:
              id:
                - ccec121a-f9bc-4a04-809e-1fe0d8ae7fdd
          rules:
            - condition:
                cart:
                  items:
                    brands:
                      - 1
                      - 2
                      - 3
                  minimum_quantity: 1
                  minimum_spend: '12.95'
              action:
                cart_value:
                  discount:
                    fixed_amount: '12.95'
              apply_once: true
              stop: true
          current_uses: 2
          max_uses: 10
          status: ENABLED
          start_date: '2019-01-20T22:00:00.000Z'
          end_date: '2019-01-20T22:00:00.000Z'
          stop: false
          can_be_used_with_other_promotions: false
          currency_code: USD
          notifications:
            - content: Congratulations! You've received a free %ACTION.FREE_PRODUCT%!
              type: UPSELL
              locations:
                - HOME_PAGE
          shipping_address:
            countries:
              - iso2_country_code: US
          schedule:
            week_frequency: 2
            week_days:
              - Monday
            daily_start_time: '01:20:00'
            daily_end_time: '23:59:00'
    Customer:
      type: object
      description: |-
        Specifies the requirements which make the customer eligible for the promotion.

        Note:
        - Only "group_ids" or "excluded_group_ids" should be specified (have non empty array data), but not both.
        - group_id zero (0) means guest customers or registered customers who not assigned to any groups.
      properties:
        group_ids:
          type: array
          description: 'A list of customer group ids that the promotion targets. Only customers in those groups are eligible for this promotion. When unspecified, or set to an empty array, this requirement is not effective, and all customers who satisfy the other requirements (minimum_order_count, excluded_group_ids) are eligible for the promotion'
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
        minimum_order_count:
          type: integer
          description: The minimum number of completed orders required of the customer.
        excluded_group_ids:
          type: array
          description: 'A list of customer group ids that the promotion will exclude. Only customers NOT in those groups are eligible for this promotion. When unspecified, or set to an empty array, this requirement will not have any effects, and all customers who satisfy the other requirements (group_ids, minimum_order_count) are eligible for the promotion.'
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
            example: 0
        segments:
          oneOf:
            - $ref: '#/components/schemas/CustomerSegmentLimitation'
            - $ref: '#/components/schemas/AndCustomerSegmentLimitation'
            - $ref: '#/components/schemas/OrCustomerSegmentLimitation'
            - $ref: '#/components/schemas/NotCustomerSegmentLimitation'
    Rule:
      title: Rule
      required:
        - action
      type: object
      properties:
        condition:
          $ref: '#/components/schemas/Condition'
        action:
          $ref: '#/components/schemas/Action'
        apply_once:
          type: boolean
          description: Set this to false if you want the rule to run repeatedly (eg. 1 free product X for every product Y you purchase)
          default: true
        stop:
          type: boolean
          description: 'When the current rule is applied successfully, whether to stop executing all the remaining rules down the priority list'
      description: |-
        **Rule**
        Rule is the executable unit of the promotion, it applies the discount defined in the specified action when the condition is met.
    Condition:
      oneOf:
        - $ref: '#/components/schemas/CartCondition'
        - $ref: '#/components/schemas/AndCondition'
        - $ref: '#/components/schemas/OrCondition'
        - $ref: '#/components/schemas/NotCondition'
      description: '**Condition**'
    AndCondition:
      title: AndCondition
      type: object
      description: |-
        **AndCondition**
        Evaluates to true when all children are evaluated to true
      properties:
        and:
          type: array
          description: 'Array of [Condition](/api-beta-promotions/c2NoOjIxNTcxMDEw-condition).'
          items:
            $ref: '#/components/schemas/Condition'
    OrCondition:
      title: OrCondition
      type: object
      description: |-
        **OrCondition**
        Evaluates to true when at least one of the children are evaluated to true in the order they are specified
      properties:
        or:
          type: array
          description: 'Array of [Condition](/api-beta-promotions/c2NoOjIxNTcxMDEw-condition).'
          items:
            $ref: '#/components/schemas/Condition'
    NotCondition:
      title: NotCondition
      type: object
      description: |-
        **NotCondition**
        Evaluates to true when the child is evaluated to false.
      properties:
        not:
          $ref: '#/components/schemas/Condition'
    CartCondition:
      title: Cart Condition
      type: object
      properties:
        cart:
          type: object
          properties:
            items:
              $ref: '#/components/schemas/ItemMatcher'
            minimum_quantity:
              type: integer
              description: 'Minimum required quantity of the item in the cart for the condition to match. This field is *mandatory* when `items` are specified, but has *no effect* if `items` are not specified.'
              example: 1
            minimum_spend:
              $ref: '#/components/schemas/Money'
      description: |-
        **Cart Condition**
        Condition based on current cart content.
    ItemMatcher:
      title: Item Matcher
      description: |-
        **ItemMatcher**
        What items to consider in the condition or action. If this is specified, you will need to also specify at least one of minimum_quantity or minimum_spend.
      oneOf:
        - $ref: '#/components/schemas/SimpleItemMatcher'
        - $ref: '#/components/schemas/AndItemMatcher'
        - $ref: '#/components/schemas/OrItemMatcher'
        - $ref: '#/components/schemas/NotItemMatcher'
    AndItemMatcher:
      title: AndItemMatcher
      type: object
      description: |-
        **AndItemMatcher**
        Evaluates to true when all children are evaluated to true
      properties:
        and:
          type: array
          description: 'Array of [Item Matcher](/api-beta-promotions/c2NoOjIxNTcxMDE1-item-matcher).'
          items:
            $ref: '#/components/schemas/ItemMatcher'
    OrItemMatcher:
      title: OrItemMatcher
      type: object
      description: |-
        **OrItemMatcher**
        Evaluates to true when at least one of the children are evaluated to true in the order they are specified.
      properties:
        or:
          type: array
          description: 'Array of [Item Matcher](/api-beta-promotions/c2NoOjIxNTcxMDE1-item-matcher).'
          items:
            $ref: '#/components/schemas/ItemMatcher'
    NotItemMatcher:
      title: NotItemMatcher
      type: object
      description: |-
        **NotItemMatcher**
        Evaluates to true when the child is evaluated to false.
      properties:
        not:
          $ref: '#/components/schemas/ItemMatcher'
    SimpleItemMatcher:
      title: Simple Item Matcher
      description: '**Simple Item Matcher**'
      oneOf:
        - $ref: '#/components/schemas/BrandsItemMatcher'
        - $ref: '#/components/schemas/CategoriesItemMatcher'
        - $ref: '#/components/schemas/ProductsItemMatcher'
        - $ref: '#/components/schemas/VariantsItemMatcher'
        - $ref: '#/components/schemas/ProductOptionsItemMatcher'
    BrandsItemMatcher:
      title: Brands Item Matcher
      type: object
      properties:
        brands:
          type: array
          description: List of brand ids
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
      description: |-
        **BrandsItemMatcher**
        Brands which the items should belong to.
    CategoriesItemMatcher:
      title: Categories Item Matcher
      type: object
      properties:
        categories:
          type: array
          description: List of category ids
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
      description: |-
        **CategoriesItemMatcher**
        Categories which the items should belong to.
    ProductsItemMatcher:
      title: Products Item Matcher
      type: object
      properties:
        products:
          type: array
          description: List of product ids
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
      description: |-
        **Products Item Matcher**
        Specific products which items should be from.
    VariantsItemMatcher:
      title: Variants Item Matcher
      type: object
      properties:
        variants:
          type: array
          description: List of variant ids
          example:
            - 1
            - 2
            - 3
          items:
            type: integer
      description: |-
        **Variants Item Matcher**
        Product variants which items should be from.
    CartValueAction:
      title: Cart Value Action
      type: object
      properties:
        cart_value:
          required:
            - discount
          type: object
          properties:
            discount:
              $ref: '#/components/schemas/Discount'
      description: |-
        **Cart Value Action**
        Applies discount on the entire cart.
    GiftItemAction:
      type: object
      properties:
        gift_item:
          required:
            - quantity
          type: object
          properties:
            quantity:
              type: integer
              description: Quantity of gift item to give
            product_id:
              type: integer
              description: product id of the gift item
            variant_id:
              type: integer
              description: variant id of the gift item
      description: |-
        **Gift Item Action**
        Give a gift item for free.
    FixedPriceSetAction:
      title: Fixed Price Set Action
      type: object
      properties:
        fixed_price_set:
          required:
            - fixed_price
            - quantity
          type: object
          properties:
            quantity:
              type: integer
              description: Quantity of items in the set that would receive the discount
            fixed_price:
              $ref: '#/components/schemas/Money'
            items:
              $ref: '#/components/schemas/ItemMatcher'
            strategy:
              type: string
              description: 'If the shopper has multiple items in their cart that could be discounted by this action, strategy will determine which items are discounted, for example LEAST_EXPENSIVE will sort items in price ascending order and discount the cheapest item first.'
              enum:
                - LEAST_EXPENSIVE
                - LEAST_EXPENSIVE_ONLY
                - MOST_EXPENSIVE
                - MOST_EXPENSIVE_ONLY
            exclude_items_on_sale:
              type: boolean
              description: Enable this option to prevent items already on sale from being further discounted.
      description: |-
        **Fixed Price Set Action**
        Give a fixed price for a set of items.
    CartItemsAction:
      title: Cart Items Action
      type: object
      properties:
        cart_items:
          required:
            - discount
          type: object
          properties:
            discount:
              $ref: '#/components/schemas/Discount'
            as_total:
              type: boolean
              description: |
                Enable this option to distribute the discount as a total among matching items. By default, discount applies to each item.
                Example: If set to false, the discount is $10 and you have 2 eligible items for this discount in the cart, both items will be discounted by $10, with a total of $20 off the order.
                If set to true, $10 will be distributed among the 2 items, weighted by their respective price. in the simple case of same item, each item will receive $5 discount.
            items:
              $ref: '#/components/schemas/ItemMatcher'
            include_items_considered_by_condition:
              type: boolean
              description: 'Enable this option to discount items that are used to satisify the condition. By default items that are used to satisfy the condition are excluded from receving discount, eg Buy 1 Get 1 20% off, when the cart only contains 1 item, it''s not discountable.'
            exclude_items_on_sale:
              type: boolean
              description: Enable this option to prevent items already on sale from being further discounted.
            strategy:
              type: string
              description: 'If the shopper has multiple items in their cart that could be discounted by this action, strategy will determine which items are discounted, for example LEAST_EXPENSIVE will sort items in price ascending order and discount the cheapest item first.'
              enum:
                - LEAST_EXPENSIVE
                - LEAST_EXPENSIVE_ONLY
                - MOST_EXPENSIVE
                - MOST_EXPENSIVE_ONLY
            quantity:
              type: integer
              description: 'Quantity of matching item to discount, if left omitted, infinite quantity can be discounted'
              example: 2
      description: |-
        **Cart Items Action**
        Applies discount on matching products in the cart.
    ShippingAction:
      title: Shipping Action
      type: object
      description: |-
        **Shipping Action**
        Applies discount on shipping, optionally restricted to specific shipping zones.
      properties:
        shipping:
          type: object
          properties:
            free_shipping:
              type: boolean
              description: Provide a separate free shipping method. This is the only type of discount we support at this stage. Read-Only.
            zone_ids:
              description: ''
              oneOf:
                - type: string
                  properties: {}
                  enum:
                    - '*'
                  description: All configured shipping zones.
                - type: array
                  uniqueItems: true
                  description: List of shipping zone IDs that free shipping can apply to.
                  items:
                    type: integer
                    minimum: 1
          required:
            - zone_ids
    Discount:
      title: Discount
      description: '**Discount**'
      oneOf:
        - $ref: '#/components/schemas/FixedDiscount'
        - $ref: '#/components/schemas/PercentageDiscount'
    PercentageDiscount:
      title: Percentage Discount
      type: object
      properties:
        percentage_amount:
          maximum: 100
          minimum: 0
          exclusiveMinimum: true
          type: number
          description: The percentage off discount to apply.
      description: '**Percentage Discount**'
    FixedDiscount:
      title: Fixed Discount
      type: object
      properties:
        fixed_amount:
          $ref: '#/components/schemas/Money'
      description: '**Fixed Discount**'
    Money:
      title: Money
      pattern: '[0-9]+(\.[0-9]+)?'
      type: string
      description: |-
        **Money**
        Represents a monetary value in the store's default currency.
      example: '12.95'
    CollectionMeta:
      title: Collection Meta
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
      description: Contains data about the response including pagination and collection totals.
    Pagination:
      title: Pagination
      type: object
      properties:
        total:
          type: integer
          description: Total number of items in the result set.
        count:
          type: integer
          description: Total number of items in the collection response.
        per_page:
          type: integer
          description: 'The amount of items returned in the collection per page, controlled by the limit parameter.'
        current_page:
          type: integer
          description: The page you are currently on within the collection.
        total_pages:
          type: integer
          description: The total number of pages in the collection.
        links:
          type: object
          properties:
            previous:
              type: string
              description: Link to the previous page returned in the response.
            current:
              type: string
              description: Link to the current page returned in the response.
            next:
              type: string
              description: Link to the next page returned in the response.
          description: Pagination links for the previous and next parts of the whole collection.
      description: 'Data about the response, including pagination and collection totals.'
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      title: Error
      type: object
      properties:
        stauts:
          type: integer
        title:
          type: string
    Notification:
      title: Notification
      required:
        - content
        - locations
        - type
      type: object
      properties:
        content:
          type: string
          description: |-
            The notification content to be displayed to the user.
            Data from the Condition and Action are available allowing the message to be customised.
          example: Congratulations! You've received a free %ACTION.FREE_PRODUCT%!
        type:
          type: string
          enum:
            - UPSELL
            - ELIGIBLE
            - APPLIED
        locations:
          type: array
          description: Indicates where the notification message will be displayed.
          items:
            type: string
            enum:
              - HOME_PAGE
              - PRODUCT_PAGE
              - CART_PAGE
              - CHECKOUT_PAGE
      description: |-
        **Notification**
        A notification displayed to the user based on the result of executing a promotion (e.g. a "Congratulations! You've received free shipping!" message when the shopper receives free shipping).
    Action:
      title: Action
      description: '**Action**'
      oneOf:
        - $ref: '#/components/schemas/CartValueAction'
        - $ref: '#/components/schemas/CartItemsAction'
        - $ref: '#/components/schemas/GiftItemAction'
        - $ref: '#/components/schemas/FixedPriceSetAction'
        - $ref: '#/components/schemas/ShippingAction'
    ProductOptionsItemMatcher:
      title: Product Options Item Matcher
      type: object
      properties:
        product_option:
          required:
            - name
            - type
            - values
          type: object
          properties:
            type:
              type: string
              example: string_match
            name:
              type: string
              example: Color
            values:
              type: array
              items:
                type: string
                example: '["Red": "Blue"]'
      description: |-
        Match a product by product options.

        Currently the only type which is supported is `string_match` which does a string comparison on the name and values.
    CouponCode:
      type: object
      description: A `CouponCode` encapsulates attributes of a coupon code
      properties:
        id:
          type: integer
          description: An auto generated unique identifier for coupon code.
          example: 1
        code:
          pattern: '[a-zA-Z0-9_\ -]'
          type: string
          description: 'A unique code that can be used to manually apply a discount. Only letters, numbers, white spaces, underscores and hypens are allowed.'
          example: TEST-COUPON-CODE
        current_uses:
          type: integer
          description: A read-only count of the times this coupon code has been used.
          example: 2
        max_uses:
          type: integer
          description: The maximum number of times this coupon code can be used.
          example: 10
        max_uses_per_customer:
          type: integer
          description: The maximum number of times this coupon code can be used by a specific customer.
          example: 5
        created:
          type: string
          description: The date & time when this coupon code was created.
          format: date-time
          example: '2019-01-20T22:00:00.000Z'
      required:
        - code
    BulkActionResponseMeta:
      title: Bulk Action Response Meta
      type: object
      properties:
        total:
          type: integer
          description: Total number of items in the bulk action.
        success:
          type: integer
          description: Number of items that processed successfully.
        failed:
          type: integer
          description: Number of items that failed to process.
      description: 'Contains data about the bulk action response including total, failed and success numbers.'
    BulkActionResponseError:
      title: Bulk Action Response Error
      type: object
      properties:
        status:
          type: integer
          description: HTTP Response status.
          example: 422
        title:
          type: string
          description: Title of the status
          example: Some promotions failed to delete.
        type:
          type: string
          description: Explanation of the error type
          example: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
        errors:
          type: object
          properties: {}
          description: 'Contain all per item errors. Use an index of an item on a request to reference an error. Here is the first and second item on a request has an error: { "0.id": "Invalid id",  "1.error":"Promotion cannot be deleted" }'
      description: Contains data about the error of the bulk action.
    CountryAddressMatcher:
      title: CountryAddressMatcher
      type: object
      description: Countries which the promotion targets.
      properties:
        countries:
          type: array
          description: List of Country Rules
          items:
            $ref: '#/components/schemas/CountryRuleInfo'
      required:
        - countries
    SimpleAddressMatcher:
      title: SimpleAddressMatcher
      description: 'Specifies a criterion for addresses, can be combined using logical item matchers.'
      oneOf:
        - $ref: '#/components/schemas/CountryAddressMatcher'
    AddressMatcher:
      title: AddressMatcher
      description: what addresses to consider
      oneOf:
        - $ref: '#/components/schemas/SimpleAddressMatcher'
        - $ref: '#/components/schemas/NotAddressMatcher'
    NotAddressMatcher:
      title: NotAddressMatcher
      type: object
      description: Evaluates to true when the child is evaluated to false
      properties:
        not:
          $ref: '#/components/schemas/AddressMatcher'
      required:
        - not
    CountryRuleInfo:
      title: CountryRuleInfo
      type: object
      description: Country Rule
      properties:
        iso2_country_code:
          type: string
          description: ISO 3166-1 alpha-2 country code
          example: US
      required:
        - iso2_country_code
    AvailabilityByWeekDay:
      title: AvailabilityByWeekDay
      type: object
      description: Availability by week days
      x-examples:
        Available on Tuesday and Thursday from 10am to 10pm every 2 weeks:
          week_frequency: 2
          week_days:
            - Tuesday
            - Thursday
          daily_start_time: '10:00:00'
          daily_end_time: '22:00:00'
          value:
            week_frequency: 2
            week_days:
              - Tuesday
              - Thursday
            daily_start_time: '10:00:00'
            daily_end_time: '22:00:00'
      properties:
        week_frequency:
          minimum: 1
          type: integer
          description: Available every 'x' weeks
          example: 2
        week_days:
          type: array
          description: Week days that the promotion is available on
          items:
            example: Monday
            enum:
              - Monday
              - Tuesday
              - Wednesday
              - Thursday
              - Friday
              - Saturday
              - Sunday
            type: string
        daily_start_time:
          maxLength: 8
          minLength: 8
          pattern: '^([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])$'
          type: string
          description: Time of day from that the promotion is available
          format: time
          example: '01:20:00'
        daily_end_time:
          maxLength: 8
          minLength: 8
          pattern: '^([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])$'
          type: string
          description: Time of day until then the promotion is available
          format: time
          example: '23:59:00'
      required:
        - week_frequency
        - week_days
        - daily_start_time
        - daily_end_time
    CustomerSegmentLimitation:
      title: CustomerSegmentLimitation
      oneOf:
        - $ref: '#/components/schemas/CustomerSegmentIdLimitation'
        - $ref: '#/components/schemas/NotCustomerSegmentLimitation'
        - $ref: '#/components/schemas/AndCustomerSegmentLimitation'
        - $ref: '#/components/schemas/OrCustomerSegmentLimitation'
      description: ''
    CustomerSegmentIdLimitation:
      title: CustomerSegmentIdLimitation
      required:
        - id
      type: object
      properties:
        id:
          minItems: 1
          type: array
          description: An array of segment IDs
          items:
            maxLength: 36
            type: string
            example: ccec121a-f9bc-4a04-809e-1fe0d8ae7fdd
      x-examples:
        example-1:
          id:
            - '1'
            - '2'
          value:
            id:
              - '1'
              - '2'
    AndCustomerSegmentLimitation:
      title: AndCustomerSegmentLimitation
      type: object
      x-examples:
        example-1:
          and:
            - not:
                id:
                  - '2'
            - id:
                - '1'
          value:
            and:
              - not:
                  id:
                    - '2'
              - id:
                  - '1'
      properties:
        and:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/CustomerSegmentLimitation'
      required:
        - and
    OrCustomerSegmentLimitation:
      title: OrCustomerSegmentLimitation
      type: object
      x-examples:
        example-1:
          or:
            - not:
                id:
                  - '2'
            - id:
                - '1'
          value:
            or:
              - not:
                  id:
                    - '2'
              - id:
                  - '1'
      properties:
        or:
          minItems: 2
          type: array
          items:
            $ref: '#/components/schemas/CustomerSegmentLimitation'
      required:
        - or
    NotCustomerSegmentLimitation:
      title: NotCustomerSegmentLimitation
      type: object
      x-examples:
        example-1:
          not:
            id:
              - '1'
              - '2'
          value:
            not:
              id:
                - '1'
                - '2'
      properties:
        not:
          $ref: '#/components/schemas/CustomerSegmentLimitation'
      required:
        - not
  responses:
    BulkDeleteResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/components/schemas/BulkActionResponseError'
              meta:
                $ref: '#/components/schemas/BulkActionResponseMeta'
          examples:
            422 - Missing Parameter:
              value:
                errors:
                  - status: 422
                    title: 'Parameter id:in is required'
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                meta:
                  total: 0
                  success: 0
                  failed: 0
            422 - Error Deleting:
              value:
                errors:
                  - status: 422
                    title: Errors occurred in bulk delete action.
                    type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
                    errors:
                      0.constraint: 'Failed for id=12. Error: constraint reference error.'
                      2.code: 'Failed for id=14. Error: some relating codes are still present.'
                meta:
                  total: 5
                  success: 3
                  failed: 2
        422 - Missing Parameter:
          example:
            errors:
              - status: 422
                title: 'Parameter id:in is required'
                type: 'https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes'
            meta:
              total: 0
              success: 0
              failed: 0
        422 - Error Deleting:
          example: |-
            {
              "errors": [
                {
                  "status": 422,
                  "title": "Errors occurred in bulk delete action.",
                  "type": "https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes",
                  "errors": {
                    "0.constraint": "Failed for id=12. Error: constraint reference error.",
                    "2.code": "Failed for id=14. Error: some relating codes are still present."
                  }
                }
              ],
              "meta": {
                "total": 5,
                "success": 3,
                "failed": 2
              }
            }
    PromotionCodeResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CouponCode'
              meta:
                type: object
                properties: {}
                description: Empty meta object; may be used later.
          examples:
            example-1:
              value:
                data:
                  id: 1
                  code: TEST_COUPON
                  max_uses: 10
                  max_uses_per_customer: 5
                  current_uses: 0
                  created: '2019-01-20T22:00:00+00:00'
                meta: {}
    PromotionCodesCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CouponCode'
              meta:
                $ref: '#/components/schemas/CollectionMeta'
          examples:
            example-1:
              value:
                data:
                  - id: 1
                    code: TEST_COUPON
                    max_uses: 10
                    max_uses_per_customer: 5
                    current_uses: 0
                    created: '2019-01-20T22:00:00+00:00'
                meta:
                  pagination:
                    total: 1
                    count: 1
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    PromotionsCollectionResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  oneOf:
                    - $ref: '#/components/schemas/PromotionCoupon'
                    - $ref: '#/components/schemas/PromotionAutomatic'
              meta:
                $ref: '#/components/schemas/CollectionMeta'
          examples:
            example-1:
              value:
                data:
                  - id: 10
                    name: Buy One Get One Free
                    redemption_type: AUTOMATIC
                    customer:
                      group_ids:
                        - 1
                        - 2
                      minimum_order_count: 0
                      excluded_group_ids: []
                      segments: null
                    rules:
                      - action:
                          gift_item:
                            product_id: 174
                            quantity: 1
                        apply_once: false
                        stop: false
                        condition:
                          cart:
                            items:
                              products:
                                - 174
                            minimum_quantity: 1
                    notifications:
                      - type: UPSELL
                        content: ''
                        locations:
                          - CART_PAGE
                      - type: ELIGIBLE
                        content: ''
                        locations:
                          - CART_PAGE
                      - type: APPLIED
                        content: ''
                        locations:
                          - CART_PAGE
                    priority: 2
                    stop: false
                    currency_code: USD
                    current_uses: 0
                    max_uses: null
                    start_date: '2019-01-28T00:00:00+00:00'
                    end_date: null
                    status: ENABLED
                    can_be_used_with_other_promotions: true
                    shipping_address:
                      not:
                        countries:
                          - iso2_country_code: US
                          - iso2_country_code: AU
                  - id: 15
                    name: Apply 100% off Twine Stand
                    redemption_type: COUPON
                    customer:
                      group_ids: []
                      minimum_order_count: 0
                      excluded_group_ids: []
                      segments:
                        id:
                          - '1'
                    rules:
                      - action:
                          cart_items:
                            discount:
                              percentage_amount: '100'
                            strategy: LEAST_EXPENSIVE
                            as_total: false
                            include_items_considered_by_condition: false
                            items:
                              products:
                                - 163
                            quantity: 1
                        apply_once: true
                        stop: false
                    notifications:
                      - type: UPSELL
                        content: <div>&nbsp;</div>
                        locations:
                          - CART_PAGE
                      - type: ELIGIBLE
                        content: <div>&nbsp;</div>
                        locations:
                          - CART_PAGE
                      - type: APPLIED
                        content: <div>&nbsp;</div>
                        locations:
                          - CART_PAGE
                    priority: 1
                    stop: false
                    currency_code: USD
                    current_uses: 0
                    max_uses: null
                    start_date: '2019-01-31T05:00:00+00:00'
                    end_date: null
                    status: DISABLED
                    can_be_used_with_other_promotions: false
                    coupon_overrides_automatic_when_offering_higher_discounts: true
                meta:
                  pagination:
                    total: 2
                    count: 2
                    per_page: 50
                    current_page: 1
                    total_pages: 1
                    links:
                      current: '?page=1&limit=50'
    PromotionsResponse:
      description: ''
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                oneOf:
                  - $ref: '#/components/schemas/PromotionCoupon'
                  - $ref: '#/components/schemas/PromotionAutomatic'
              meta:
                type: object
                description: Empty meta object; may be used later.
          examples:
            coupon-example:
              value:
                data:
                  id: 1
                  redemption_type: COUPON
                  name: Buy Product X Get Free Shipping
                  customer:
                    group_ids:
                      - 1
                      - 2
                      - 3
                    minimum_order_count: 0
                    excluded_group_ids:
                      - 1
                      - 2
                      - 3
                    segments:
                      id:
                        - ccec121a-f9bc-4a04-809e-1fe0d8ae7fdd
                  rules:
                    - condition:
                        cart:
                          items:
                            brands:
                              - 1
                              - 2
                              - 3
                          minimum_quantity: 1
                          minimum_spend: '12.95'
                      action:
                        cart_value:
                          discount:
                            fixed_amount: '12.95'
                      apply_once: true
                      stop: true
                  current_uses: 2
                  max_uses: 10
                  status: ENABLED
                  start_date: '2019-01-20T22:00:00.000Z'
                  end_date: '2019-01-20T22:00:00.000Z'
                  stop: false
                  can_be_used_with_other_promotions: false
                  coupon_overrides_automatic_when_offering_higher_discounts: false
                  currency_code: USD
                  notifications:
                    - content: Congratulations! You've received a free %ACTION.FREE_PRODUCT%!
                      type: UPSELL
                      locations:
                        - HOME_PAGE
                  shipping_address:
                    countries:
                      - iso2_country_code: US
                  schedule:
                    week_frequency: 2
                    week_days:
                      - Monday
                    daily_start_time: '01:20:00'
                    daily_end_time: '23:59:00'
                meta: {}
            automatic-example:
              value:
                data:
                  id: 1
                  redemption_type: AUTOMATIC
                  name: Buy Product X Get Free Shipping
                  customer:
                    group_ids:
                      - 1
                      - 2
                      - 3
                    minimum_order_count: 0
                    excluded_group_ids:
                      - 1
                      - 2
                      - 3
                    segments:
                      id:
                        - ccec121a-f9bc-4a04-809e-1fe0d8ae7fdd
                  rules:
                    - condition:
                        cart:
                          items:
                            brands:
                              - 1
                              - 2
                              - 3
                          minimum_quantity: 1
                          minimum_spend: '12.95'
                      action:
                        cart_value:
                          discount:
                            fixed_amount: '12.95'
                      apply_once: true
                      stop: true
                  current_uses: 2
                  max_uses: 10
                  status: ENABLED
                  start_date: '2019-01-20T22:00:00.000Z'
                  end_date: '2019-01-20T22:00:00.000Z'
                  stop: false
                  can_be_used_with_other_promotions: false
                  currency_code: USD
                  notifications:
                    - content: Congratulations! You've received a free %ACTION.FREE_PRODUCT%!
                      type: UPSELL
                      locations:
                        - HOME_PAGE
                  shipping_address:
                    countries:
                      - iso2_country_code: US
                  schedule:
                    week_frequency: 2
                    week_days:
                      - Monday
                    daily_start_time: '01:20:00'
                    daily_end_time: '23:59:00'
                meta: {}
  parameters:
    page:
      name: page
      in: query
      description: Specifies the page number in a limited (paginated) list of resources.
      schema:
        minimum: 1
        type: integer
    limit:
      name: limit
      in: query
      description: Controls the number of items per page in a limited (paginated) list of resources.
      schema:
        maximum: 250
        minimum: 1
        type: integer
    Accept:
      name: Accept
      in: header
      schema:
        type: string
        default: application/json
    Content-Type:
      name: Content-Type
      in: header
      schema:
        type: string
        default: application/json
  securitySchemes:
    X-Auth-Client:
      type: apiKey
      name: X-Auth-Client
      in: header
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
